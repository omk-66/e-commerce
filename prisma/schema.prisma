// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String    @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  role             Role      @default(USER)
  password         String?
  TwoFactorEnabled Boolean   @default(false)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

// Enum for user roles
enum Role {
  USER
  ADMIN
}

model EmailVerificationToken {
  id      String   @id @default(cuid())
  email   String   @unique
  token   String
  expires DateTime
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String   @unique
  token   String
  expires DateTime
}

model TwoFactorToken {
  id      String   @id @default(cuid())
  email   String   @unique
  token   String
  expires DateTime
}

model Product {
  id          Int       @id @default(autoincrement())
  description String
  title       String
  created     DateTime  @default(now())
  price       Float

  productVariants ProductVariant[]
}

model ProductVariant {
  id            Int            @id @default(autoincrement())
  color         String
  productType   String
  updated       DateTime       @default(now())
  productID     Int
  product       Product        @relation(fields: [productID], references: [id], onDelete: Cascade)
  variantImages VariantImage[]
  variantTags   VariantTag[]   
}

model VariantImage {
  id             Int            @id @default(autoincrement())
  url            String
  size           Float
  name           String
  order          Float
  variantID      Int
  productVariant ProductVariant @relation(fields: [variantID], references: [id], onDelete: Cascade)
}

model VariantTag {
  id             Int            @id @default(autoincrement())
  tag            String
  variantID      Int
  productVariant ProductVariant @relation(fields: [variantID], references: [id], onDelete: Cascade)

  @@unique([tag, variantID])
}
